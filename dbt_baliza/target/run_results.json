{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.4", "generated_at": "2025-07-16T22:03:49.339989Z", "invocation_id": "106569c3-1a39-4e7a-affc-2216a6e35f6d", "invocation_started_at": "2025-07-16T22:03:45.838113Z", "env": {}}, "results": [{"status": "pass", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:48.030115Z", "completed_at": "2025-07-16T22:03:48.115376Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:48.116062Z", "completed_at": "2025-07-16T22:03:48.235972Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.22986507415771484, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_baliza.source_unique_pncp_pncp_raw_responses_id.57baf59b80", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"baliza\".\"psa\".\"pncp_raw_responses\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:48.019008Z", "completed_at": "2025-07-16T22:03:48.109523Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:48.110213Z", "completed_at": "2025-07-16T22:03:48.232646Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.23557281494140625, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_baliza.source_not_null_pncp_pncp_raw_responses_id.4402a1a081", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"baliza\".\"psa\".\"pncp_raw_responses\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:48.011627Z", "completed_at": "2025-07-16T22:03:48.011637Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:48.013778Z", "completed_at": "2025-07-16T22:03:48.249782Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2494215965270996, "adapter_response": {"_message": "INSERT 1", "code": "INSERT", "rows_affected": 1}, "message": "INSERT 1", "failures": null, "unique_id": "seed.dbt_baliza.pncp_raw_responses", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:48.264580Z", "completed_at": "2025-07-16T22:03:48.291036Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:48.291721Z", "completed_at": "2025-07-16T22:03:48.673968Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4231424331665039, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.dbt_baliza.bronze_atas", "compiled": true, "compiled_code": "\n\nSELECT\n    id,\n    extracted_at,\n    endpoint_name,\n    endpoint_url,\n    data_date,\n    run_id,\n    total_records,\n    total_pages,\n    current_page,\n    TRY_CAST(response_content AS JSON) AS response_json\nFROM \"baliza\".\"psa\".\"pncp_raw_responses\"\nWHERE endpoint_name IN ('atas_periodo', 'atas_atualizacao')\n  AND response_code = 200\n  AND response_content IS NOT NULL\n  AND response_content != ''\n  AND TRY_CAST(response_content AS JSON) IS NOT NULL\n\n  AND extracted_at > (SELECT MAX(extracted_at) FROM \"baliza\".\"main_bronze\".\"bronze_atas\")\n", "relation_name": "\"baliza\".\"main_bronze\".\"bronze_atas\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:48.283786Z", "completed_at": "2025-07-16T22:03:48.312717Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:48.313453Z", "completed_at": "2025-07-16T22:03:48.677893Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.43158745765686035, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.dbt_baliza.bronze_contratos", "compiled": true, "compiled_code": "\n\nSELECT\n    id,\n    extracted_at,\n    endpoint_name,\n    endpoint_url,\n    data_date,\n    run_id,\n    total_records,\n    total_pages,\n    current_page,\n    TRY_CAST(response_content AS JSON) AS response_json\nFROM \"baliza\".\"psa\".\"pncp_raw_responses\"\nWHERE endpoint_name IN ('contratos_publicacao', 'contratos_atualizacao')\n  AND response_code = 200\n  AND response_content IS NOT NULL\n  AND response_content != ''\n  AND TRY_CAST(response_content AS JSON) IS NOT NULL\n\n  AND extracted_at > (SELECT MAX(extracted_at) FROM \"baliza\".\"main_bronze\".\"bronze_contratos\")\n", "relation_name": "\"baliza\".\"main_bronze\".\"bronze_contratos\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:48.276806Z", "completed_at": "2025-07-16T22:03:48.318599Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:48.319240Z", "completed_at": "2025-07-16T22:03:48.696128Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4400453567504883, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.dbt_baliza.bronze_contratacoes", "compiled": true, "compiled_code": "\n\nSELECT\n    id,\n    extracted_at,\n    endpoint_name,\n    endpoint_url,\n    data_date,\n    run_id,\n    total_records,\n    total_pages,\n    current_page,\n    TRY_CAST(response_content AS JSON) AS response_json\nFROM \"baliza\".\"psa\".\"pncp_raw_responses\"\nWHERE endpoint_name IN ('contratacoes_publicacao', 'contratacoes_atualizacao', 'contratacoes_proposta')\n  AND response_code = 200\n  AND response_content IS NOT NULL\n  AND response_content != ''\n  AND TRY_CAST(response_content AS JSON) IS NOT NULL\n\n  AND extracted_at > (SELECT MAX(extracted_at) FROM \"baliza\".\"main_bronze\".\"bronze_contratacoes\")\n", "relation_name": "\"baliza\".\"main_bronze\".\"bronze_contratacoes\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:48.705502Z", "completed_at": "2025-07-16T22:03:48.718384Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:48.719038Z", "completed_at": "2025-07-16T22:03:48.841684Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.15081548690795898, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.dbt_baliza.silver_contratos", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    SELECT *\n    FROM \"baliza\".\"main_bronze\".\"bronze_contratos\"\n    \n    WHERE extracted_at > (SELECT MAX(extracted_at) FROM \"baliza\".\"main_silver\".\"silver_contratos\")\n    \n),\n\nparsed_responses AS (\n  SELECT\n    id,\n    extracted_at,\n    endpoint_name,\n    endpoint_url,\n    data_date,\n    run_id,\n    total_records,\n    total_pages,\n    current_page,\n    response_json\n  FROM source\n),\n\n-- Extract individual contract records from the data array\ncontract_records AS (\n  SELECT\n    parsed_responses.id AS response_id,\n    parsed_responses.extracted_at,\n    parsed_responses.endpoint_name,\n    parsed_responses.endpoint_url,\n    parsed_responses.data_date,\n    parsed_responses.run_id,\n    parsed_responses.total_records,\n    parsed_responses.total_pages,\n    parsed_responses.current_page,\n    -- Generate a unique key for each contract record\n    ROW_NUMBER() OVER (PARTITION BY parsed_responses.id ORDER BY contract_data_table.value) AS record_index,\n    -- Extract individual contract data\n    contract_data_table.value AS contract_data\n  FROM parsed_responses\n  CROSS JOIN json_each(json_extract(parsed_responses.response_json, '$.data')) AS contract_data_table\n  WHERE json_extract(parsed_responses.response_json, '$.data') IS NOT NULL\n)\n\nSELECT\n  response_id,\n  extracted_at,\n  endpoint_name,\n  endpoint_url,\n  data_date,\n  run_id,\n  total_records,\n  total_pages,\n  current_page,\n  record_index,\n  \n  -- Contract identifiers\n  contract_data ->> 'numeroControlePNCP' AS numero_controle_pncp,\n  contract_data ->> 'numeroControlePncpCompra' AS numero_controle_pncp_compra,\n  contract_data ->> 'numeroContratoEmpenho' AS numero_contrato_empenho,\n  CAST(contract_data ->> 'anoContrato' AS INTEGER) AS ano_contrato,\n  CAST(contract_data ->> 'sequencialContrato' AS INTEGER) AS sequencial_contrato,\n  \n  -- Dates\n  TRY_CAST(contract_data ->> 'dataAssinatura' AS DATE) AS data_assinatura,\n  TRY_CAST(contract_data ->> 'dataVigenciaInicio' AS DATE) AS data_vigencia_inicio,\n  TRY_CAST(contract_data ->> 'dataVigenciaFim' AS DATE) AS data_vigencia_fim,\n  TRY_CAST(contract_data ->> 'dataPublicacaoPncp' AS TIMESTAMP) AS data_publicacao_pncp,\n  TRY_CAST(contract_data ->> 'dataAtualizacao' AS TIMESTAMP) AS data_atualizacao,\n  TRY_CAST(contract_data ->> 'dataAtualizacaoGlobal' AS TIMESTAMP) AS data_atualizacao_global,\n  \n  -- Amounts\n  CAST(contract_data ->> 'valorInicial' AS DOUBLE) AS valor_inicial,\n  CAST(contract_data ->> 'valorGlobal' AS DOUBLE) AS valor_global,\n  CAST(contract_data ->> 'valorParcela' AS DOUBLE) AS valor_parcela,\n  CAST(contract_data ->> 'valorAcumulado' AS DOUBLE) AS valor_acumulado,\n  \n  -- Supplier information\n  contract_data ->> 'niFornecedor' AS ni_fornecedor,\n  contract_data ->> 'tipoPessoa' AS tipo_pessoa,\n  contract_data ->> 'nomeRazaoSocialFornecedor' AS nome_razao_social_fornecedor,\n  contract_data ->> 'niFornecedorSubContratado' AS ni_fornecedor_subcontratado,\n  contract_data ->> 'nomeFornecedorSubContratado' AS nome_fornecedor_subcontratado,\n  contract_data ->> 'tipoPessoaSubContratada' AS tipo_pessoa_subcontratada,\n  \n  -- Contract details\n  contract_data ->> 'objetoContrato' AS objeto_contrato,\n  contract_data ->> 'informacaoComplementar' AS informacao_complementar,\n  contract_data ->> 'processo' AS processo,\n  CAST(contract_data ->> 'numeroParcelas' AS INTEGER) AS numero_parcelas,\n  CAST(contract_data ->> 'numeroRetificacao' AS INTEGER) AS numero_retificacao,\n  CAST(contract_data ->> 'receita' AS BOOLEAN) AS receita,\n  \n  -- Organization data (nested JSON)\n  contract_data -> 'orgaoEntidade' AS orgao_entidade_json,\n  contract_data -> 'unidadeOrgao' AS unidade_orgao_json,\n  contract_data -> 'orgaoSubRogado' AS orgao_subrogado_json,\n  contract_data -> 'unidadeSubRogada' AS unidade_subrogada_json,\n  contract_data -> 'tipoContrato' AS tipo_contrato_json,\n  contract_data -> 'categoriaProcesso' AS categoria_processo_json,\n  \n  -- Additional identifiers\n  contract_data ->> 'codigoPaisFornecedor' AS codigo_pais_fornecedor,\n  contract_data ->> 'identificadorCipi' AS identificador_cipi,\n  contract_data ->> 'urlCipi' AS url_cipi,\n  contract_data ->> 'usuarioNome' AS usuario_nome,\n  \n  -- Full contract data as JSON for fallback\n  contract_data AS contract_json\n\nFROM contract_records", "relation_name": "\"baliza\".\"main_silver\".\"silver_contratos\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:48.687739Z", "completed_at": "2025-07-16T22:03:48.712105Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:48.713220Z", "completed_at": "2025-07-16T22:03:48.859187Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.17603397369384766, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.dbt_baliza.silver_atas", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    SELECT *\n    FROM \"baliza\".\"main_bronze\".\"bronze_atas\"\n    \n    WHERE extracted_at > (SELECT MAX(extracted_at) FROM \"baliza\".\"main_silver\".\"silver_atas\")\n    \n),\n\nparsed_responses AS (\n  SELECT\n    id,\n    extracted_at,\n    endpoint_name,\n    endpoint_url,\n    data_date,\n    run_id,\n    total_records,\n    total_pages,\n    current_page,\n    response_json\n  FROM source\n),\n\n-- Extract individual ata records from the data array\nata_records AS (\n  SELECT\n    parsed_responses.id AS response_id,\n    parsed_responses.extracted_at,\n    parsed_responses.endpoint_name,\n    parsed_responses.endpoint_url,\n    parsed_responses.data_date,\n    parsed_responses.run_id,\n    parsed_responses.total_records,\n    parsed_responses.total_pages,\n    parsed_responses.current_page,\n    -- Generate a unique key for each ata record\n    ROW_NUMBER() OVER (PARTITION BY parsed_responses.id ORDER BY ata_data_table.value) AS record_index,\n    -- Extract individual ata data\n    ata_data_table.value AS ata_data\n  FROM parsed_responses\n  CROSS JOIN json_each(json_extract(parsed_responses.response_json, '$.data')) AS ata_data_table\n  WHERE json_extract(parsed_responses.response_json, '$.data') IS NOT NULL\n)\n\nSELECT\n  response_id,\n  extracted_at,\n  endpoint_name,\n  endpoint_url,\n  data_date,\n  run_id,\n  total_records,\n  total_pages,\n  current_page,\n  record_index,\n  \n  -- Ata identifiers\n  ata_data ->> 'numeroControlePNCP' AS numero_controle_pncp,\n  ata_data ->> 'numeroAta' AS numero_ata,\n  CAST(ata_data ->> 'anoAta' AS INTEGER) AS ano_ata,\n  \n  -- Dates\n  TRY_CAST(ata_data ->> 'dataAssinatura' AS DATE) AS data_assinatura,\n  TRY_CAST(ata_data ->> 'dataVigenciaInicio' AS DATE) AS data_vigencia_inicio,\n  TRY_CAST(ata_data ->> 'dataVigenciaFim' AS DATE) AS data_vigencia_fim,\n  TRY_CAST(ata_data ->> 'dataPublicacaoPncp' AS TIMESTAMP) AS data_publicacao_pncp,\n  TRY_CAST(ata_data ->> 'dataAtualizacao' AS TIMESTAMP) AS data_atualizacao,\n  \n  -- Supplier information\n  ata_data ->> 'niFornecedor' AS ni_fornecedor,\n  ata_data ->> 'nomeRazaoSocialFornecedor' AS nome_razao_social_fornecedor,\n  \n  -- Ata details\n  ata_data ->> 'objetoAta' AS objeto_ata,\n  ata_data ->> 'informacaoComplementar' AS informacao_complementar,\n  CAST(ata_data ->> 'numeroRetificacao' AS INTEGER) AS numero_retificacao,\n\n  -- Organization data (nested JSON)\n  ata_data -> 'orgaoEntidade' AS orgao_entidade_json,\n  ata_data -> 'unidadeOrgao' AS unidade_orgao_json,\n  \n  -- Full ata data as JSON for fallback\n  ata_data AS ata_json\n\nFROM ata_records", "relation_name": "\"baliza\".\"main_silver\".\"silver_atas\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:48.729751Z", "completed_at": "2025-07-16T22:03:48.750808Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:48.751484Z", "completed_at": "2025-07-16T22:03:48.872139Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.14511823654174805, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.dbt_baliza.silver_contratacoes", "compiled": true, "compiled_code": "\n\nWITH source AS (\n    SELECT *\n    FROM \"baliza\".\"main_bronze\".\"bronze_contratacoes\"\n    \n    WHERE extracted_at > (SELECT MAX(extracted_at) FROM \"baliza\".\"main_silver\".\"silver_contratacoes\")\n    \n),\n\nparsed_responses AS (\n  SELECT\n    id,\n    extracted_at,\n    endpoint_name,\n    endpoint_url,\n    data_date,\n    run_id,\n    total_records,\n    total_pages,\n    current_page,\n    response_json\n  FROM source\n),\n\n-- Extract individual procurement records from the data array\nprocurement_records AS (\n  SELECT\n    parsed_responses.id AS response_id,\n    parsed_responses.extracted_at,\n    parsed_responses.endpoint_name,\n    parsed_responses.endpoint_url,\n    parsed_responses.data_date,\n    parsed_responses.run_id,\n    parsed_responses.total_records,\n    parsed_responses.total_pages,\n    parsed_responses.current_page,\n    -- Generate a unique key for each procurement record\n    ROW_NUMBER() OVER (PARTITION BY parsed_responses.id ORDER BY procurement_data_table.value) AS record_index,\n    -- Extract individual procurement data\n    procurement_data_table.value AS procurement_data\n  FROM parsed_responses\n  CROSS JOIN json_each(json_extract(parsed_responses.response_json, '$.data')) AS procurement_data_table\n  WHERE json_extract(parsed_responses.response_json, '$.data') IS NOT NULL\n)\n\nSELECT\n  response_id,\n  extracted_at,\n  endpoint_name,\n  endpoint_url,\n  data_date,\n  run_id,\n  total_records,\n  total_pages,\n  current_page,\n  record_index,\n  \n  -- Procurement identifiers\n  procurement_data ->> 'numeroControlePNCP' AS numero_controle_pncp,\n  procurement_data ->> 'numeroCompra' AS numero_compra,\n  CAST(procurement_data ->> 'anoCompra' AS INTEGER) AS ano_compra,\n  CAST(procurement_data ->> 'sequencialCompra' AS INTEGER) AS sequencial_compra,\n  \n  -- Dates\n  TRY_CAST(procurement_data ->> 'dataPublicacaoPncp' AS TIMESTAMP) AS data_publicacao_pncp,\n  TRY_CAST(procurement_data ->> 'dataAberturaProposta' AS TIMESTAMP) AS data_abertura_proposta,\n  TRY_CAST(procurement_data ->> 'dataEncerramentoProposta' AS TIMESTAMP) AS data_encerramento_proposta,\n  TRY_CAST(procurement_data ->> 'dataInclusao' AS TIMESTAMP) AS data_inclusao,\n  TRY_CAST(procurement_data ->> 'dataAtualizacao' AS TIMESTAMP) AS data_atualizacao,\n  TRY_CAST(procurement_data ->> 'dataAtualizacaoGlobal' AS TIMESTAMP) AS data_atualizacao_global,\n  \n  -- Amounts\n  CAST(procurement_data ->> 'valorTotalEstimado' AS DOUBLE) AS valor_total_estimado,\n  CAST(procurement_data ->> 'valorTotalHomologado' AS DOUBLE) AS valor_total_homologado,\n  \n  -- Procurement details\n  procurement_data ->> 'objetoCompra' AS objeto_compra,\n  procurement_data ->> 'informacaoComplementar' AS informacao_complementar,\n  procurement_data ->> 'processo' AS processo,\n  procurement_data ->> 'linkSistemaOrigem' AS link_sistema_origem,\n  procurement_data ->> 'linkProcessoEletronico' AS link_processo_eletronico,\n  procurement_data ->> 'justificativaPresencial' AS justificativa_presencial,\n  \n  -- Procurement method and mode\n  CAST(procurement_data ->> 'modalidadeId' AS INTEGER) AS modalidade_id,\n  procurement_data ->> 'modalidadeNome' AS modalidade_nome,\n  CAST(procurement_data ->> 'modoDisputaId' AS INTEGER) AS modo_disputa_id,\n  procurement_data ->> 'modoDisputaNome' AS modo_disputa_nome,\n  \n  -- Instrument and framework\n  CAST(procurement_data ->> 'tipoInstrumentoConvocatorioCodigo' AS INTEGER) AS tipo_instrumento_convocatorio_codigo,\n  procurement_data ->> 'tipoInstrumentoConvocatorioNome' AS tipo_instrumento_convocatorio_nome,\n  \n  -- Status and flags\n  procurement_data ->> 'situacaoCompraId' AS situacao_compra_id,\n  procurement_data ->> 'situacaoCompraNome' AS situacao_compra_nome,\n  CAST(procurement_data ->> 'srp' AS BOOLEAN) AS srp,\n  CAST(procurement_data ->> 'existeResultado' AS BOOLEAN) AS existe_resultado,\n  \n  -- Organization data (nested JSON)\n  procurement_data -> 'orgaoEntidade' AS orgao_entidade_json,\n  procurement_data -> 'unidadeOrgao' AS unidade_orgao_json,\n  procurement_data -> 'orgaoSubRogado' AS orgao_subrogado_json,\n  procurement_data -> 'unidadeSubRogada' AS unidade_subrogada_json,\n  procurement_data -> 'amparoLegal' AS amparo_legal_json,\n  procurement_data -> 'fontesOrcamentarias' AS fontes_orcamentarias_json,\n  \n  -- User information\n  procurement_data ->> 'usuarioNome' AS usuario_nome,\n  \n  -- Full procurement data as JSON for fallback\n  procurement_data AS procurement_json\n\nFROM procurement_records", "relation_name": "\"baliza\".\"main_silver\".\"silver_contratacoes\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:48.878939Z", "completed_at": "2025-07-16T22:03:48.911203Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:48.916983Z", "completed_at": "2025-07-16T22:03:49.034436Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.16237640380859375, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.dbt_baliza.silver_dim_organizacoes", "compiled": true, "compiled_code": "\n\nWITH org_from_contracts AS (\n  SELECT DISTINCT\n    \n  orgao_entidade_json ->> 'cnpj' AS org_cnpj,\n  orgao_entidade_json ->> 'razaoSocial' AS org_razao_social,\n  orgao_entidade_json ->> 'poderId' AS org_poder_id,\n  orgao_entidade_json ->> 'esferaId' AS org_esfera_id\n\n  FROM \"baliza\".\"main_silver\".\"silver_contratos\"\n  WHERE orgao_entidade_json IS NOT NULL\n),\n\norg_from_procurements AS (\n  SELECT DISTINCT\n    \n  orgao_entidade_json ->> 'cnpj' AS org_cnpj,\n  orgao_entidade_json ->> 'razaoSocial' AS org_razao_social,\n  orgao_entidade_json ->> 'poderId' AS org_poder_id,\n  orgao_entidade_json ->> 'esferaId' AS org_esfera_id\n\n  FROM \"baliza\".\"main_silver\".\"silver_contratacoes\"\n  WHERE orgao_entidade_json IS NOT NULL\n),\n\nsubrog_from_contracts AS (\n  SELECT DISTINCT\n    \n  orgao_subrogado_json ->> 'cnpj' AS org_cnpj,\n  orgao_subrogado_json ->> 'razaoSocial' AS org_razao_social,\n  orgao_subrogado_json ->> 'poderId' AS org_poder_id,\n  orgao_subrogado_json ->> 'esferaId' AS org_esfera_id\n\n  FROM \"baliza\".\"main_silver\".\"silver_contratos\"\n  WHERE orgao_subrogado_json IS NOT NULL\n),\n\nsubrog_from_procurements AS (\n  SELECT DISTINCT\n    \n  orgao_subrogado_json ->> 'cnpj' AS org_cnpj,\n  orgao_subrogado_json ->> 'razaoSocial' AS org_razao_social,\n  orgao_subrogado_json ->> 'poderId' AS org_poder_id,\n  orgao_subrogado_json ->> 'esferaId' AS org_esfera_id\n\n  FROM \"baliza\".\"main_silver\".\"silver_contratacoes\"\n  WHERE orgao_subrogado_json IS NOT NULL\n),\n\nall_organizations AS (\n  SELECT * FROM org_from_contracts\n  UNION ALL\n  SELECT * FROM org_from_procurements\n  UNION ALL\n  SELECT * FROM subrog_from_contracts\n  UNION ALL\n  SELECT * FROM subrog_from_procurements\n),\n\ndeduplicated_organizations AS (\n  SELECT DISTINCT\n    org_cnpj,\n    org_razao_social,\n    org_poder_id,\n    org_esfera_id\n  FROM all_organizations\n  WHERE org_cnpj IS NOT NULL\n)\n\nSELECT\n  -- Surrogate key\n  MD5(org_cnpj) AS org_key,\n  \n  -- Natural key\n  org_cnpj AS cnpj,\n  \n  -- Organization details\n  org_razao_social AS razao_social,\n  org_poder_id AS poder_id,\n  org_esfera_id AS esfera_id,\n  \n  -- Derived attributes\n  CASE \n    WHEN org_poder_id = 'E' THEN 'Executivo'\n    WHEN org_poder_id = 'L' THEN 'Legislativo'\n    WHEN org_poder_id = 'J' THEN 'Judici\u00e1rio'\n    WHEN org_poder_id = 'M' THEN 'Minist\u00e9rio P\u00fablico'\n    ELSE 'Outros'\n  END AS poder_nome,\n  \n  CASE \n    WHEN org_esfera_id = 'F' THEN 'Federal'\n    WHEN org_esfera_id = 'E' THEN 'Estadual'\n    WHEN org_esfera_id = 'M' THEN 'Municipal'\n    ELSE 'Outros'\n  END AS esfera_nome,\n  \n  -- Metadata\n  CURRENT_TIMESTAMP AS created_at,\n  CURRENT_TIMESTAMP AS updated_at\n\nFROM deduplicated_organizations\nORDER BY org_cnpj", "relation_name": "\"baliza\".\"main_silver\".\"silver_dim_organizacoes\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:48.892135Z", "completed_at": "2025-07-16T22:03:48.905430Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:48.906049Z", "completed_at": "2025-07-16T22:03:49.039200Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.15694618225097656, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.dbt_baliza.silver_dim_unidades_orgao", "compiled": true, "compiled_code": "\n\nWITH units_from_contracts AS (\n  SELECT DISTINCT\n    \n  orgao_entidade_json ->> 'cnpj' AS org_cnpj,\n  orgao_entidade_json ->> 'razaoSocial' AS org_razao_social,\n  orgao_entidade_json ->> 'poderId' AS org_poder_id,\n  orgao_entidade_json ->> 'esferaId' AS org_esfera_id\n,\n    \n  unidade_orgao_json ->> 'ufNome' AS unit_uf_nome,\n  unidade_orgao_json ->> 'ufSigla' AS unit_uf_sigla,\n  unidade_orgao_json ->> 'codigoUnidade' AS unit_codigo_unidade,\n  unidade_orgao_json ->> 'nomeUnidade' AS unit_nome_unidade,\n  unidade_orgao_json ->> 'municipioNome' AS unit_municipio_nome,\n  unidade_orgao_json ->> 'codigoIbge' AS unit_codigo_ibge\n\n  FROM \"baliza\".\"main_silver\".\"silver_contratos\"\n  WHERE orgao_entidade_json IS NOT NULL\n    AND unidade_orgao_json IS NOT NULL\n),\n\nunits_from_procurements AS (\n  SELECT DISTINCT\n    \n  orgao_entidade_json ->> 'cnpj' AS org_cnpj,\n  orgao_entidade_json ->> 'razaoSocial' AS org_razao_social,\n  orgao_entidade_json ->> 'poderId' AS org_poder_id,\n  orgao_entidade_json ->> 'esferaId' AS org_esfera_id\n,\n    \n  unidade_orgao_json ->> 'ufNome' AS unit_uf_nome,\n  unidade_orgao_json ->> 'ufSigla' AS unit_uf_sigla,\n  unidade_orgao_json ->> 'codigoUnidade' AS unit_codigo_unidade,\n  unidade_orgao_json ->> 'nomeUnidade' AS unit_nome_unidade,\n  unidade_orgao_json ->> 'municipioNome' AS unit_municipio_nome,\n  unidade_orgao_json ->> 'codigoIbge' AS unit_codigo_ibge\n\n  FROM \"baliza\".\"main_silver\".\"silver_contratacoes\"\n  WHERE orgao_entidade_json IS NOT NULL\n    AND unidade_orgao_json IS NOT NULL\n),\n\nsubrog_units_from_contracts AS (\n  SELECT DISTINCT\n    \n  orgao_subrogado_json ->> 'cnpj' AS org_cnpj,\n  orgao_subrogado_json ->> 'razaoSocial' AS org_razao_social,\n  orgao_subrogado_json ->> 'poderId' AS org_poder_id,\n  orgao_subrogado_json ->> 'esferaId' AS org_esfera_id\n,\n    \n  unidade_subrogada_json ->> 'ufNome' AS unit_uf_nome,\n  unidade_subrogada_json ->> 'ufSigla' AS unit_uf_sigla,\n  unidade_subrogada_json ->> 'codigoUnidade' AS unit_codigo_unidade,\n  unidade_subrogada_json ->> 'nomeUnidade' AS unit_nome_unidade,\n  unidade_subrogada_json ->> 'municipioNome' AS unit_municipio_nome,\n  unidade_subrogada_json ->> 'codigoIbge' AS unit_codigo_ibge\n\n  FROM \"baliza\".\"main_silver\".\"silver_contratos\"\n  WHERE orgao_subrogado_json IS NOT NULL\n    AND unidade_subrogada_json IS NOT NULL\n),\n\nsubrog_units_from_procurements AS (\n  SELECT DISTINCT\n    \n  orgao_subrogado_json ->> 'cnpj' AS org_cnpj,\n  orgao_subrogado_json ->> 'razaoSocial' AS org_razao_social,\n  orgao_subrogado_json ->> 'poderId' AS org_poder_id,\n  orgao_subrogado_json ->> 'esferaId' AS org_esfera_id\n,\n    \n  unidade_subrogada_json ->> 'ufNome' AS unit_uf_nome,\n  unidade_subrogada_json ->> 'ufSigla' AS unit_uf_sigla,\n  unidade_subrogada_json ->> 'codigoUnidade' AS unit_codigo_unidade,\n  unidade_subrogada_json ->> 'nomeUnidade' AS unit_nome_unidade,\n  unidade_subrogada_json ->> 'municipioNome' AS unit_municipio_nome,\n  unidade_subrogada_json ->> 'codigoIbge' AS unit_codigo_ibge\n\n  FROM \"baliza\".\"main_silver\".\"silver_contratacoes\"\n  WHERE orgao_subrogado_json IS NOT NULL\n    AND unidade_subrogada_json IS NOT NULL\n),\n\nall_units AS (\n  SELECT * FROM units_from_contracts\n  UNION ALL\n  SELECT * FROM units_from_procurements\n  UNION ALL\n  SELECT * FROM subrog_units_from_contracts\n  UNION ALL\n  SELECT * FROM subrog_units_from_procurements\n),\n\ndeduplicated_units AS (\n  SELECT DISTINCT\n    org_cnpj,\n    unit_codigo_unidade,\n    unit_nome_unidade,\n    unit_uf_nome,\n    unit_uf_sigla,\n    unit_municipio_nome,\n    unit_codigo_ibge\n  FROM all_units\n  WHERE org_cnpj IS NOT NULL\n    AND unit_codigo_unidade IS NOT NULL\n)\n\nSELECT\n  -- Surrogate key\n  MD5(org_cnpj || '|' || unit_codigo_unidade) AS unit_key,\n  \n  -- Natural keys\n  org_cnpj AS cnpj_orgao,\n  unit_codigo_unidade AS codigo_unidade,\n  \n  -- Unit details\n  unit_nome_unidade AS nome_unidade,\n  unit_uf_nome AS uf_nome,\n  unit_uf_sigla AS uf_sigla,\n  unit_municipio_nome AS municipio_nome,\n  unit_codigo_ibge AS codigo_ibge,\n  \n  -- Derived attributes\n  CASE \n    WHEN unit_uf_sigla IN ('AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO') THEN unit_uf_sigla\n    ELSE 'OUTROS'\n  END AS uf_sigla_normalizada,\n  \n  CASE \n    WHEN unit_uf_sigla IN ('AC', 'AM', 'AP', 'PA', 'RO', 'RR', 'TO') THEN 'Norte'\n    WHEN unit_uf_sigla IN ('AL', 'BA', 'CE', 'MA', 'PB', 'PE', 'PI', 'RN', 'SE') THEN 'Nordeste'\n    WHEN unit_uf_sigla IN ('GO', 'MT', 'MS', 'DF') THEN 'Centro-Oeste'\n    WHEN unit_uf_sigla IN ('ES', 'MG', 'RJ', 'SP') THEN 'Sudeste'\n    WHEN unit_uf_sigla IN ('PR', 'RS', 'SC') THEN 'Sul'\n    ELSE 'Outros'\n  END AS regiao,\n  \n  -- Metadata\n  CURRENT_TIMESTAMP AS created_at,\n  CURRENT_TIMESTAMP AS updated_at\n\nFROM deduplicated_units\nORDER BY org_cnpj, unit_codigo_unidade", "relation_name": "\"baliza\".\"main_silver\".\"silver_dim_unidades_orgao\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:49.056787Z", "completed_at": "2025-07-16T22:03:49.082274Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:49.082996Z", "completed_at": "2025-07-16T22:03:49.113548Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.07295775413513184, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_baliza.not_null_silver_dim_organizacoes_cnpj.78f99338d1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cnpj\nfrom \"baliza\".\"main_silver\".\"silver_dim_organizacoes\"\nwhere cnpj is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:49.063244Z", "completed_at": "2025-07-16T22:03:49.094173Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:49.094849Z", "completed_at": "2025-07-16T22:03:49.135998Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09034895896911621, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_baliza.not_null_silver_dim_organizacoes_org_key.a0e6dc2ef4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect org_key\nfrom \"baliza\".\"main_silver\".\"silver_dim_organizacoes\"\nwhere org_key is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:49.077702Z", "completed_at": "2025-07-16T22:03:49.101211Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:49.103852Z", "completed_at": "2025-07-16T22:03:49.147104Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.08404684066772461, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_baliza.unique_silver_dim_organizacoes_org_key.f1a0888cb1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    org_key as unique_field,\n    count(*) as n_records\n\nfrom \"baliza\".\"main_silver\".\"silver_dim_organizacoes\"\nwhere org_key is not null\ngroup by org_key\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:49.071738Z", "completed_at": "2025-07-16T22:03:49.103179Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:49.108024Z", "completed_at": "2025-07-16T22:03:49.144696Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.10106301307678223, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.dbt_baliza.unique_silver_dim_organizacoes_cnpj.0f3df7a2ad", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    cnpj as unique_field,\n    count(*) as n_records\n\nfrom \"baliza\".\"main_silver\".\"silver_dim_organizacoes\"\nwhere cnpj is not null\ngroup by cnpj\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:49.165248Z", "completed_at": "2025-07-16T22:03:49.183924Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:49.185437Z", "completed_at": "2025-07-16T22:03:49.260223Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.10499286651611328, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.dbt_baliza.silver_fact_contratacoes", "compiled": true, "compiled_code": "\n\nWITH procurements_with_keys AS (\n  SELECT\n    p.*,\n    \n    -- Organization keys\n    org.org_key,\n    unit.unit_key,\n    \n    -- Subrogated organization keys\n    subrog_org.org_key AS subrog_org_key,\n    subrog_unit.unit_key AS subrog_unit_key\n    \n  FROM \"baliza\".\"main_silver\".\"silver_contratacoes\" p\n  \n  -- Main organization\n  LEFT JOIN \"baliza\".\"main_silver\".\"silver_dim_organizacoes\" org\n    ON p.orgao_entidade_json ->> 'cnpj' = org.cnpj\n  \n  -- Main unit\n  LEFT JOIN \"baliza\".\"main_silver\".\"silver_dim_unidades_orgao\" unit\n    ON p.orgao_entidade_json ->> 'cnpj' = unit.cnpj_orgao\n    AND CAST(p.unidade_orgao_json ->> 'codigoUnidade' AS VARCHAR) = unit.codigo_unidade\n  \n  -- Subrogated organization\n  LEFT JOIN \"baliza\".\"main_silver\".\"silver_dim_organizacoes\" subrog_org\n    ON p.orgao_subrogado_json ->> 'cnpj' = subrog_org.cnpj\n  \n  -- Subrogated unit\n  LEFT JOIN \"baliza\".\"main_silver\".\"silver_dim_unidades_orgao\" subrog_unit\n    ON p.orgao_subrogado_json ->> 'cnpj' = subrog_unit.cnpj_orgao\n    AND CAST(p.unidade_subrogada_json ->> 'codigoUnidade' AS VARCHAR) = subrog_unit.codigo_unidade\n\n  WHERE p.orgao_entidade_json IS NOT NULL\n    AND p.unidade_orgao_json IS NOT NULL\n)\n\nSELECT\n  -- Surrogate key\n  MD5(numero_controle_pncp) AS procurement_key,\n  \n  -- Natural key\n  numero_controle_pncp,\n  \n  -- Procurement identifiers\n  numero_compra,\n  ano_compra,\n  sequencial_compra,\n  \n  -- Dates\n  data_publicacao_pncp,\n  data_abertura_proposta,\n  data_encerramento_proposta,\n  data_inclusao,\n  data_atualizacao,\n  data_atualizacao_global,\n  \n  -- Duration calculations\n  CASE \n    WHEN data_abertura_proposta IS NOT NULL AND data_encerramento_proposta IS NOT NULL\n    THEN DATE_DIFF('day', data_abertura_proposta, data_encerramento_proposta)\n    ELSE NULL\n  END AS duracao_proposta_dias,\n  \n  -- Amounts\n  valor_total_estimado,\n  valor_total_homologado,\n  \n  -- Procurement details\n  objeto_compra,\n  informacao_complementar,\n  processo,\n  link_sistema_origem,\n  link_processo_eletronico,\n  justificativa_presencial,\n  \n  -- Procurement method and mode\n  modalidade_id,\n  modalidade_nome,\n  modo_disputa_id,\n  modo_disputa_nome,\n  \n  -- Instrument and framework\n  tipo_instrumento_convocatorio_codigo,\n  tipo_instrumento_convocatorio_nome,\n  \n  -- Status and flags\n  situacao_compra_id,\n  situacao_compra_nome,\n  srp,\n  existe_resultado,\n  \n  -- User information\n  usuario_nome,\n  \n  -- Foreign keys\n  org_key,\n  unit_key,\n  subrog_org_key,\n  subrog_unit_key,\n  \n  -- Legal framework information (extracted from JSON)\n  amparo_legal_json ->> 'codigo' AS amparo_legal_codigo,\n  amparo_legal_json ->> 'nome' AS amparo_legal_nome,\n  amparo_legal_json ->> 'descricao' AS amparo_legal_descricao,\n  \n  -- Derived attributes\n  CASE \n    WHEN modalidade_id = 1 THEN 'Leil\u00e3o Eletr\u00f4nico'\n    WHEN modalidade_id = 3 THEN 'Concurso'\n    WHEN modalidade_id = 4 THEN 'Concorr\u00eancia Eletr\u00f4nica'\n    WHEN modalidade_id = 6 THEN 'Preg\u00e3o Eletr\u00f4nico'\n    WHEN modalidade_id = 8 THEN 'Dispensa'\n    WHEN modalidade_id = 9 THEN 'Inexigibilidade'\n    WHEN modalidade_id = 10 THEN 'Credenciamento'\n    WHEN modalidade_id = 11 THEN 'Sele\u00e7\u00e3o'\n    WHEN modalidade_id = 12 THEN 'Consulta'\n    WHEN modalidade_id = 13 THEN 'Registro de Pre\u00e7o'\n    WHEN modalidade_id = 14 THEN 'Outros'\n    ELSE 'N\u00e3o informado'\n  END AS modalidade_descricao,\n  \n  CASE \n    WHEN valor_total_estimado IS NOT NULL AND valor_total_estimado > 0 THEN\n      CASE \n        WHEN valor_total_estimado <= 17600 THEN 'At\u00e9 R$ 17.600'\n        WHEN valor_total_estimado <= 88000 THEN 'R$ 17.601 a R$ 88.000'\n        WHEN valor_total_estimado <= 176000 THEN 'R$ 88.001 a R$ 176.000'\n        WHEN valor_total_estimado <= 1408000 THEN 'R$ 176.001 a R$ 1.408.000'\n        WHEN valor_total_estimado <= 3300000 THEN 'R$ 1.408.001 a R$ 3.300.000'\n        ELSE 'Acima de R$ 3.300.000'\n      END\n    ELSE 'N\u00e3o informado'\n  END AS faixa_valor_estimado,\n  \n  CASE \n    WHEN situacao_compra_id = '1' THEN 'Planejada'\n    WHEN situacao_compra_id = '2' THEN 'Publicada'\n    WHEN situacao_compra_id = '3' THEN 'Homologada'\n    WHEN situacao_compra_id = '4' THEN 'Deserta/Fracassada'\n    ELSE 'N\u00e3o informado'\n  END AS situacao_compra_descricao,\n  \n  CASE \n    WHEN data_abertura_proposta IS NOT NULL AND data_encerramento_proposta IS NOT NULL THEN\n      CASE \n        WHEN DATE_DIFF('day', data_abertura_proposta, data_encerramento_proposta) <= 7 THEN 'At\u00e9 7 dias'\n        WHEN DATE_DIFF('day', data_abertura_proposta, data_encerramento_proposta) <= 15 THEN '8 a 15 dias'\n        WHEN DATE_DIFF('day', data_abertura_proposta, data_encerramento_proposta) <= 30 THEN '16 a 30 dias'\n        WHEN DATE_DIFF('day', data_abertura_proposta, data_encerramento_proposta) <= 60 THEN '31 a 60 dias'\n        ELSE 'Mais de 60 dias'\n      END\n    ELSE 'N\u00e3o informado'\n  END AS faixa_duracao_proposta,\n  \n  -- Data quality flags\n  CASE \n    WHEN numero_controle_pncp IS NULL THEN 'N\u00famero de controle ausente'\n    WHEN modalidade_id IS NULL THEN 'Modalidade ausente'\n    WHEN valor_total_estimado IS NULL OR valor_total_estimado <= 0 THEN 'Valor estimado inv\u00e1lido'\n    WHEN data_publicacao_pncp IS NULL THEN 'Data de publica\u00e7\u00e3o ausente'\n    WHEN objeto_compra IS NULL THEN 'Objeto da compra ausente'\n    ELSE 'OK'\n  END AS quality_flag,\n  \n  -- Metadata\n  endpoint_name,\n  data_date,\n  extracted_at,\n  run_id,\n  \n  -- JSON fallback\n  procurement_json,\n  fontes_orcamentarias_json,\n  \n  -- Audit\n  CURRENT_TIMESTAMP AS created_at,\n  CURRENT_TIMESTAMP AS updated_at\n\nFROM procurements_with_keys\nORDER BY numero_controle_pncp", "relation_name": "\"baliza\".\"main_silver\".\"silver_fact_contratacoes\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:49.170629Z", "completed_at": "2025-07-16T22:03:49.184733Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:49.190051Z", "completed_at": "2025-07-16T22:03:49.274205Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11206507682800293, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.dbt_baliza.silver_fact_contratos", "compiled": true, "compiled_code": "\n\nWITH contracts_with_keys AS (\n  SELECT\n    c.*,\n    \n    -- Organization keys\n    org.org_key,\n    unit.unit_key,\n    \n    -- Subrogated organization keys\n    subrog_org.org_key AS subrog_org_key,\n    subrog_unit.unit_key AS subrog_unit_key\n    \n  FROM \"baliza\".\"main_silver\".\"silver_contratos\" c\n  \n  -- Main organization\n  LEFT JOIN \"baliza\".\"main_silver\".\"silver_dim_organizacoes\" org\n    ON c.orgao_entidade_json ->> 'cnpj' = org.cnpj\n  \n  -- Main unit\n  LEFT JOIN \"baliza\".\"main_silver\".\"silver_dim_unidades_orgao\" unit\n    ON c.orgao_entidade_json ->> 'cnpj' = unit.cnpj_orgao\n    AND CAST(c.unidade_orgao_json ->> 'codigoUnidade' AS VARCHAR) = CAST(unit.codigo_unidade AS VARCHAR)\n  \n  -- Subrogated organization\n  LEFT JOIN \"baliza\".\"main_silver\".\"silver_dim_organizacoes\" subrog_org\n    ON c.orgao_subrogado_json ->> 'cnpj' = subrog_org.cnpj\n  \n  -- Subrogated unit\n  LEFT JOIN \"baliza\".\"main_silver\".\"silver_dim_unidades_orgao\" subrog_unit\n    ON c.orgao_subrogado_json ->> 'cnpj' = subrog_unit.cnpj_orgao\n    AND CAST(c.unidade_subrogada_json ->> 'codigoUnidade' AS VARCHAR) = CAST(subrog_unit.codigo_unidade AS VARCHAR)\n)\n\nSELECT\n  -- Surrogate key\n  MD5(numero_controle_pncp) AS contract_key,\n  \n  -- Natural key\n  numero_controle_pncp,\n  \n  -- Contract identifiers\n  numero_controle_pncp_compra,\n  numero_contrato_empenho,\n  ano_contrato,\n  sequencial_contrato,\n  \n  -- Dates\n  data_assinatura,\n  data_vigencia_inicio,\n  data_vigencia_fim,\n  data_publicacao_pncp,\n  data_atualizacao,\n  data_atualizacao_global,\n  \n  -- Duration calculations\n  CASE \n    WHEN data_vigencia_inicio IS NOT NULL AND data_vigencia_fim IS NOT NULL\n    THEN data_vigencia_fim - data_vigencia_inicio\n    ELSE NULL\n  END AS duracao_vigencia_dias,\n  \n  -- Amounts\n  valor_inicial,\n  valor_global,\n  valor_parcela,\n  valor_acumulado,\n  \n  -- Supplier information\n  ni_fornecedor,\n  tipo_pessoa,\n  nome_razao_social_fornecedor,\n  ni_fornecedor_subcontratado,\n  nome_fornecedor_subcontratado,\n  tipo_pessoa_subcontratada,\n  \n  -- Contract details\n  objeto_contrato,\n  informacao_complementar,\n  processo,\n  numero_parcelas,\n  numero_retificacao,\n  receita,\n  \n  -- Additional identifiers\n  codigo_pais_fornecedor,\n  identificador_cipi,\n  url_cipi,\n  usuario_nome,\n  \n  -- Foreign keys\n  org_key,\n  unit_key,\n  subrog_org_key,\n  subrog_unit_key,\n  \n  -- Type information (extracted from JSON)\n  tipo_contrato_json ->> 'id' AS tipo_contrato_id,\n  tipo_contrato_json ->> 'nome' AS tipo_contrato_nome,\n  categoria_processo_json ->> 'id' AS categoria_processo_id,\n  categoria_processo_json ->> 'nome' AS categoria_processo_nome,\n  \n  -- Derived attributes\n  CASE \n    WHEN tipo_pessoa = 'PJ' THEN 'Pessoa Jur\u00eddica'\n    WHEN tipo_pessoa = 'PF' THEN 'Pessoa F\u00edsica'\n    WHEN tipo_pessoa = 'PE' THEN 'Pessoa Estrangeira'\n    ELSE 'Outros'\n  END AS tipo_pessoa_descricao,\n  \n  CASE \n    WHEN valor_global IS NOT NULL AND valor_global > 0 THEN\n      CASE \n        WHEN valor_global <= 17600 THEN 'At\u00e9 R$ 17.600'\n        WHEN valor_global <= 88000 THEN 'R$ 17.601 a R$ 88.000'\n        WHEN valor_global <= 176000 THEN 'R$ 88.001 a R$ 176.000'\n        WHEN valor_global <= 1408000 THEN 'R$ 176.001 a R$ 1.408.000'\n        WHEN valor_global <= 3300000 THEN 'R$ 1.408.001 a R$ 3.300.000'\n        ELSE 'Acima de R$ 3.300.000'\n      END\n    ELSE 'N\u00e3o informado'\n  END AS faixa_valor_global,\n  \n  CASE \n    WHEN data_vigencia_inicio IS NOT NULL AND data_vigencia_fim IS NOT NULL THEN\n      CASE \n        WHEN data_vigencia_fim - data_vigencia_inicio <= 90 THEN 'At\u00e9 90 dias'\n        WHEN data_vigencia_fim - data_vigencia_inicio <= 365 THEN '91 a 365 dias'\n        WHEN data_vigencia_fim - data_vigencia_inicio <= 730 THEN '1 a 2 anos'\n        WHEN data_vigencia_fim - data_vigencia_inicio <= 1825 THEN '2 a 5 anos'\n        ELSE 'Mais de 5 anos'\n      END\n    ELSE 'N\u00e3o informado'\n  END AS faixa_duracao_vigencia,\n  \n  -- Data quality flags\n  CASE \n    WHEN numero_controle_pncp IS NULL THEN 'N\u00famero de controle ausente'\n    WHEN valor_global IS NULL OR valor_global <= 0 THEN 'Valor global inv\u00e1lido'\n    WHEN data_assinatura IS NULL THEN 'Data de assinatura ausente'\n    WHEN ni_fornecedor IS NULL THEN 'NI do fornecedor ausente'\n    ELSE 'OK'\n  END AS quality_flag,\n  \n  -- Metadata\n  endpoint_name,\n  data_date,\n  extracted_at,\n  run_id,\n  \n  -- JSON fallback\n  contract_json,\n  \n  -- Audit\n  CURRENT_TIMESTAMP AS created_at,\n  CURRENT_TIMESTAMP AS updated_at\n\nFROM contracts_with_keys\nORDER BY numero_controle_pncp", "relation_name": "\"baliza\".\"main_silver\".\"silver_fact_contratos\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-16T22:03:49.280843Z", "completed_at": "2025-07-16T22:03:49.288513Z"}, {"name": "execute", "started_at": "2025-07-16T22:03:49.289149Z", "completed_at": "2025-07-16T22:03:49.325947Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.047583818435668945, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.dbt_baliza.mart_procurement_analytics", "compiled": true, "compiled_code": "\n\nWITH procurement_summary AS (\n  SELECT\n    p.numero_controle_pncp,\n    p.ano_compra,\n    p.data_publicacao_pncp,\n    p.modalidade_id,\n    p.modalidade_nome,\n    p.modalidade_descricao,\n    p.valor_total_estimado,\n    p.valor_total_homologado,\n    p.faixa_valor_estimado,\n    p.situacao_compra_id,\n    p.situacao_compra_descricao,\n    p.srp,\n    p.existe_resultado,\n    p.objeto_compra,\n    p.org_key,\n    p.unit_key,\n    \n    -- Organization info\n    org.cnpj AS org_cnpj,\n    org.razao_social AS org_razao_social,\n    org.poder_nome AS org_poder,\n    org.esfera_nome AS org_esfera,\n    \n    -- Unit info\n    unit.nome_unidade AS unit_nome,\n    unit.uf_sigla AS unit_uf,\n    unit.regiao AS unit_regiao,\n    unit.municipio_nome AS unit_municipio\n    \n  FROM \"baliza\".\"main_silver\".\"silver_fact_contratacoes\" p\n  LEFT JOIN \"baliza\".\"main_silver\".\"silver_dim_organizacoes\" org\n    ON p.org_key = org.org_key\n  LEFT JOIN \"baliza\".\"main_silver\".\"silver_dim_unidades_orgao\" unit\n    ON p.unit_key = unit.unit_key\n),\n\ncontract_summary AS (\n  SELECT\n    c.numero_controle_pncp_compra,\n    COUNT(*) AS total_contratos,\n    SUM(c.valor_global) AS valor_total_contratos,\n    MIN(c.data_assinatura) AS primeira_assinatura,\n    MAX(c.data_assinatura) AS ultima_assinatura,\n    AVG(c.duracao_vigencia_dias) AS duracao_media_vigencia,\n    COUNT(DISTINCT c.ni_fornecedor) AS fornecedores_distintos,\n    \n    -- Contract status flags\n    SUM(CASE WHEN c.receita = true THEN 1 ELSE 0 END) AS contratos_com_receita,\n    SUM(CASE WHEN c.numero_retificacao > 0 THEN 1 ELSE 0 END) AS contratos_retificados\n    \n  FROM \"baliza\".\"main_silver\".\"silver_fact_contratos\" c\n  WHERE c.numero_controle_pncp_compra IS NOT NULL\n  GROUP BY c.numero_controle_pncp_compra\n)\n\nSELECT\n  -- Procurement identifiers\n  p.numero_controle_pncp,\n  p.ano_compra,\n  p.data_publicacao_pncp,\n  \n  -- Organization information\n  p.org_cnpj,\n  p.org_razao_social,\n  p.org_poder,\n  p.org_esfera,\n  p.unit_nome,\n  p.unit_uf,\n  p.unit_regiao,\n  p.unit_municipio,\n  \n  -- Procurement details\n  p.modalidade_id,\n  p.modalidade_nome,\n  p.modalidade_descricao,\n  p.objeto_compra,\n  p.situacao_compra_id,\n  p.situacao_compra_descricao,\n  p.srp,\n  p.existe_resultado,\n  \n  -- Financial information\n  p.valor_total_estimado,\n  p.valor_total_homologado,\n  p.faixa_valor_estimado,\n  \n  -- Contract information\n  COALESCE(c.total_contratos, 0) AS total_contratos,\n  COALESCE(c.valor_total_contratos, 0) AS valor_total_contratos,\n  c.primeira_assinatura,\n  c.ultima_assinatura,\n  c.duracao_media_vigencia,\n  COALESCE(c.fornecedores_distintos, 0) AS fornecedores_distintos,\n  COALESCE(c.contratos_com_receita, 0) AS contratos_com_receita,\n  COALESCE(c.contratos_retificados, 0) AS contratos_retificados,\n  \n  -- Performance metrics\n  CASE \n    WHEN p.valor_total_estimado > 0 AND c.valor_total_contratos > 0 THEN\n      ROUND((c.valor_total_contratos / p.valor_total_estimado) * 100, 2)\n    ELSE NULL\n  END AS percentual_execucao_financeira,\n  \n  CASE \n    WHEN p.valor_total_homologado > 0 AND p.valor_total_estimado > 0 THEN\n      ROUND((p.valor_total_homologado / p.valor_total_estimado) * 100, 2)\n    ELSE NULL\n  END AS percentual_economia_homologacao,\n  \n  -- Time metrics\n  CASE \n    WHEN p.data_publicacao_pncp IS NOT NULL AND c.primeira_assinatura IS NOT NULL THEN\n      c.primeira_assinatura - p.data_publicacao_pncp\n    ELSE NULL\n  END AS dias_publicacao_primeira_assinatura,\n  \n  -- Categories for analysis\n  CASE \n    WHEN p.modalidade_id IN (6, 4) THEN 'Competitiva'\n    WHEN p.modalidade_id IN (8, 9) THEN 'N\u00e3o Competitiva'\n    WHEN p.modalidade_id IN (1, 3, 10, 11, 12) THEN 'Outros'\n    ELSE 'N\u00e3o Classificada'\n  END AS categoria_modalidade,\n  \n  CASE \n    WHEN p.org_esfera = 'Federal' THEN 'Federal'\n    WHEN p.org_esfera = 'Estadual' THEN 'Estadual'\n    WHEN p.org_esfera = 'Municipal' THEN 'Municipal'\n    ELSE 'Outros'\n  END AS categoria_esfera,\n  \n  CASE \n    WHEN p.org_poder = 'Executivo' THEN 'Executivo'\n    WHEN p.org_poder = 'Legislativo' THEN 'Legislativo'\n    WHEN p.org_poder = 'Judici\u00e1rio' THEN 'Judici\u00e1rio'\n    WHEN p.org_poder = 'Minist\u00e9rio P\u00fablico' THEN 'Minist\u00e9rio P\u00fablico'\n    ELSE 'Outros'\n  END AS categoria_poder,\n  \n  -- Quality indicators\n  CASE \n    WHEN p.existe_resultado = true AND COALESCE(c.total_contratos, 0) = 0 THEN 'Resultado sem contratos'\n    WHEN p.existe_resultado = false AND COALESCE(c.total_contratos, 0) > 0 THEN 'Contratos sem resultado'\n    WHEN p.valor_total_estimado > 0 AND p.valor_total_homologado > p.valor_total_estimado THEN 'Homologa\u00e7\u00e3o acima do estimado'\n    ELSE 'OK'\n  END AS indicador_qualidade,\n  \n  -- Metadata\n  CURRENT_TIMESTAMP AS created_at\n\nFROM procurement_summary p\nLEFT JOIN contract_summary c\n  ON p.numero_controle_pncp = c.numero_controle_pncp_compra\n\nORDER BY p.ano_compra DESC, p.data_publicacao_pncp DESC", "relation_name": "\"baliza\".\"main_gold\".\"mart_procurement_analytics\"", "batch_results": null}], "elapsed_time": 1.7351577281951904, "args": {"indirect_selection": "eager", "require_nested_cumulative_type_params": false, "source_freshness_run_project_hooks": true, "profiles_dir": "/app/dbt_baliza", "partial_parse": true, "project_dir": "/app/dbt_baliza", "log_level_file": "debug", "log_level": "info", "show_all_deprecations": false, "show_resource_report": false, "introspect": true, "populate_cache": true, "skip_nodes_if_on_run_start_fails": false, "static_parser": true, "state_modified_compare_vars": false, "log_format": "default", "strict_mode": false, "include_saved_query": false, "use_colors_file": true, "require_resource_names_without_spaces": true, "send_anonymous_usage_stats": true, "which": "build", "write_json": true, "quiet": false, "resource_types": [], "log_path": "/app/dbt_baliza/logs", "upload_to_artifacts_ingest_api": false, "use_fast_test_edges": false, "partial_parse_file_diff": true, "require_batched_execution_for_custom_microbatch_strategy": false, "select": [], "vars": {}, "log_format_file": "debug", "invocation_command": "dbt build", "log_file_max_bytes": 10485760, "printer_width": 80, "cache_selected_only": false, "favor_state": false, "exclude_resource_types": [], "macro_debugging": false, "print": true, "empty": false, "require_explicit_package_overrides_for_builtin_materializations": true, "validate_macro_args": false, "defer": false, "version_check": true, "use_colors": true, "require_all_warnings_handled_by_warn_error": false, "state_modified_compare_more_unrendered_values": false, "show": false, "require_yaml_configuration_for_mf_time_spines": false, "warn_error_options": {"error": [], "warn": [], "silence": []}, "export_saved_queries": false, "exclude": []}}