name: Code Quality

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

# Cancel previous runs if a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality_check:
    name: Quality Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies and run checks
        run: |
          # Install dependencies
          uv sync --all-extras
          
          # Core quality checks
          echo "üîç Running linting..."
          uv run ruff check .
          
          echo "üé® Checking formatting..."
          uv run ruff format --check .
          
          echo "üè∑Ô∏è Running type checking..."
          uv run mypy src/ --show-error-codes || true
          
          echo "üß™ Running E2E tests..."
          uv run pytest tests/ --maxfail=3 -x
          
          echo "‚úÖ All quality checks passed!"

  cli_validation:
    name: CLI Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Validate CLI commands
        run: |
          # Install dependencies
          uv sync --all-extras
          
          # Test all CLI commands
          echo "üîß Testing CLI commands..."
          uv run baliza --help
          uv run baliza extract --help
          uv run baliza transform --help
          uv run baliza load --help
          uv run baliza mcp --help
          uv run baliza stats --help
          uv run baliza enums --help
          
          # Test enum functionality
          uv run baliza enums
          uv run baliza enums ModalidadeContratacao
          
          echo "‚úÖ All CLI commands working!"

  quality_gate:
    name: Quality Gate
    needs: [quality_check, cli_validation]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check quality gate status
        run: |
          echo "üö™ Quality Gate Summary"
          echo "======================"
          
          quality_result="${{ needs.quality_check.result }}"
          cli_result="${{ needs.cli_validation.result }}"
          
          echo "Quality Check: $quality_result"
          echo "CLI Validation: $cli_result"
          
          if [ "$quality_result" = "success" ] && [ "$cli_result" = "success" ]; then
            echo "‚úÖ Quality gate PASSED"
          else
            echo "‚ùå Quality gate FAILED"
            exit 1
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const qualityResult = '${{ needs.quality_check.result }}';
            const cliResult = '${{ needs.cli_validation.result }}';
            const passed = qualityResult === 'success' && cliResult === 'success';
            const emoji = passed ? '‚úÖ' : '‚ùå';
            const message = passed ? 'PASSED' : 'FAILED';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${emoji} Quality Gate ${message}\n\n**Results:**\n- Code Quality: ${qualityResult}\n- CLI Validation: ${cliResult}`
            });